// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module nms_nms_Pipeline_VITIS_LOOP_65_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        i_2,
        bboxes_info_x1_address0,
        bboxes_info_x1_ce0,
        bboxes_info_x1_q0,
        bboxes_info_x1_address1,
        bboxes_info_x1_ce1,
        bboxes_info_x1_q1,
        bitcast_ln67,
        empty_21,
        bboxes_info_x1_load,
        bboxes_info_y1_address0,
        bboxes_info_y1_ce0,
        bboxes_info_y1_q0,
        bboxes_info_y1_address1,
        bboxes_info_y1_ce1,
        bboxes_info_y1_q1,
        bitcast_ln68,
        empty_22,
        bboxes_info_y1_load,
        bboxes_info_x2_address0,
        bboxes_info_x2_ce0,
        bboxes_info_x2_q0,
        bboxes_info_x2_address1,
        bboxes_info_x2_ce1,
        bboxes_info_x2_q1,
        bitcast_ln69,
        empty_23,
        bboxes_info_x2_load,
        bboxes_info_y2_address0,
        bboxes_info_y2_ce0,
        bboxes_info_y2_q0,
        bboxes_info_y2_address1,
        bboxes_info_y2_ce1,
        bboxes_info_y2_q1,
        bitcast_ln70,
        empty,
        bboxes_info_y2_load,
        mul1,
        i_2_cast,
        iou_matrix_address0,
        iou_matrix_ce0,
        iou_matrix_we0,
        iou_matrix_d0,
        grp_fu_5844_p_din0,
        grp_fu_5844_p_din1,
        grp_fu_5844_p_opcode,
        grp_fu_5844_p_dout0,
        grp_fu_5844_p_ce,
        grp_fu_5848_p_din0,
        grp_fu_5848_p_din1,
        grp_fu_5848_p_opcode,
        grp_fu_5848_p_dout0,
        grp_fu_5848_p_ce,
        grp_fu_5854_p_din0,
        grp_fu_5854_p_din1,
        grp_fu_5854_p_dout0,
        grp_fu_5854_p_ce,
        grp_fu_5858_p_din0,
        grp_fu_5858_p_din1,
        grp_fu_5858_p_opcode,
        grp_fu_5858_p_dout0,
        grp_fu_5858_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [6:0] i_2;
output  [6:0] bboxes_info_x1_address0;
output   bboxes_info_x1_ce0;
input  [31:0] bboxes_info_x1_q0;
output  [6:0] bboxes_info_x1_address1;
output   bboxes_info_x1_ce1;
input  [31:0] bboxes_info_x1_q1;
input  [30:0] bitcast_ln67;
input  [22:0] empty_21;
input  [31:0] bboxes_info_x1_load;
output  [6:0] bboxes_info_y1_address0;
output   bboxes_info_y1_ce0;
input  [31:0] bboxes_info_y1_q0;
output  [6:0] bboxes_info_y1_address1;
output   bboxes_info_y1_ce1;
input  [31:0] bboxes_info_y1_q1;
input  [30:0] bitcast_ln68;
input  [22:0] empty_22;
input  [31:0] bboxes_info_y1_load;
output  [6:0] bboxes_info_x2_address0;
output   bboxes_info_x2_ce0;
input  [31:0] bboxes_info_x2_q0;
output  [6:0] bboxes_info_x2_address1;
output   bboxes_info_x2_ce1;
input  [31:0] bboxes_info_x2_q1;
input  [30:0] bitcast_ln69;
input  [22:0] empty_23;
input  [31:0] bboxes_info_x2_load;
output  [6:0] bboxes_info_y2_address0;
output   bboxes_info_y2_ce0;
input  [31:0] bboxes_info_y2_q0;
output  [6:0] bboxes_info_y2_address1;
output   bboxes_info_y2_ce1;
input  [31:0] bboxes_info_y2_q1;
input  [30:0] bitcast_ln70;
input  [22:0] empty;
input  [31:0] bboxes_info_y2_load;
input  [31:0] mul1;
input  [6:0] i_2_cast;
output  [12:0] iou_matrix_address0;
output   iou_matrix_ce0;
output   iou_matrix_we0;
output  [31:0] iou_matrix_d0;
output  [31:0] grp_fu_5844_p_din0;
output  [31:0] grp_fu_5844_p_din1;
output  [0:0] grp_fu_5844_p_opcode;
input  [31:0] grp_fu_5844_p_dout0;
output   grp_fu_5844_p_ce;
output  [31:0] grp_fu_5848_p_din0;
output  [31:0] grp_fu_5848_p_din1;
output  [0:0] grp_fu_5848_p_opcode;
input  [31:0] grp_fu_5848_p_dout0;
output   grp_fu_5848_p_ce;
output  [31:0] grp_fu_5854_p_din0;
output  [31:0] grp_fu_5854_p_din1;
input  [31:0] grp_fu_5854_p_dout0;
output   grp_fu_5854_p_ce;
output  [31:0] grp_fu_5858_p_din0;
output  [31:0] grp_fu_5858_p_din1;
output  [4:0] grp_fu_5858_p_opcode;
input  [0:0] grp_fu_5858_p_dout0;
output   grp_fu_5858_p_ce;

reg ap_idle;
reg bboxes_info_x1_ce0;
reg bboxes_info_x1_ce1;
reg bboxes_info_y1_ce0;
reg bboxes_info_y1_ce1;
reg bboxes_info_x2_ce0;
reg bboxes_info_x2_ce1;
reg bboxes_info_y2_ce0;
reg bboxes_info_y2_ce1;
reg iou_matrix_ce0;
reg iou_matrix_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln65_fu_419_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [6:0] map_arr_address0;
reg    map_arr_ce0;
wire   [12:0] map_arr_q0;
wire    ap_block_pp0_stage0_11001;
wire   [12:0] i_2_cast_cast_fu_402_p1;
reg   [12:0] i_2_cast_cast_reg_981;
reg   [6:0] j_1_reg_986;
reg   [6:0] j_1_reg_986_pp0_iter1_reg;
reg   [6:0] j_1_reg_986_pp0_iter2_reg;
reg   [6:0] j_1_reg_986_pp0_iter3_reg;
reg   [31:0] bboxes_info_x1_load_1_reg_1023;
reg   [31:0] bboxes_info_y1_load_1_reg_1030;
reg   [31:0] bboxes_info_x2_load_1_reg_1037;
reg   [31:0] bboxes_info_y2_load_1_reg_1044;
wire   [12:0] sub_ln80_fu_459_p2;
reg   [12:0] sub_ln80_reg_1051;
reg   [12:0] sub_ln80_reg_1051_pp0_iter2_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter3_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter4_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter5_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter6_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter7_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter8_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter9_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter10_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter11_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter12_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter13_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter14_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter15_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter16_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter17_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter18_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter19_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter20_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter21_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter22_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter23_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter24_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter25_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter26_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter27_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter28_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter29_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter30_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter31_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter32_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter33_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter34_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter35_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter36_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter37_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter38_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter39_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter40_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter41_reg;
reg   [12:0] sub_ln80_reg_1051_pp0_iter42_reg;
wire   [0:0] icmp_ln67_2_fu_487_p2;
reg   [0:0] icmp_ln67_2_reg_1056;
wire   [0:0] icmp_ln67_3_fu_493_p2;
reg   [0:0] icmp_ln67_3_reg_1061;
wire   [0:0] icmp_ln68_2_fu_516_p2;
reg   [0:0] icmp_ln68_2_reg_1066;
wire   [0:0] icmp_ln68_3_fu_522_p2;
reg   [0:0] icmp_ln68_3_reg_1071;
wire   [0:0] icmp_ln69_2_fu_545_p2;
reg   [0:0] icmp_ln69_2_reg_1076;
wire   [0:0] icmp_ln69_3_fu_551_p2;
reg   [0:0] icmp_ln69_3_reg_1081;
wire   [0:0] icmp_ln70_2_fu_574_p2;
reg   [0:0] icmp_ln70_2_reg_1086;
wire   [0:0] icmp_ln70_3_fu_580_p2;
reg   [0:0] icmp_ln70_3_reg_1091;
wire   [0:0] and_ln67_1_fu_622_p2;
reg   [0:0] and_ln67_1_reg_1096;
wire   [0:0] and_ln68_1_fu_664_p2;
reg   [0:0] and_ln68_1_reg_1101;
wire   [0:0] and_ln69_1_fu_706_p2;
reg   [0:0] and_ln69_1_reg_1106;
wire   [0:0] and_ln70_1_fu_748_p2;
reg   [0:0] and_ln70_1_reg_1111;
reg   [31:0] xx1_reg_1136;
reg   [31:0] yy1_reg_1141;
reg   [31:0] xx2_reg_1146;
reg   [31:0] yy2_reg_1151;
reg   [31:0] sub4_reg_1156;
reg   [31:0] sub5_reg_1161;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] sub_reg_1166;
wire   [31:0] grp_fu_332_p2;
reg   [31:0] sub3_reg_1171;
wire   [31:0] grp_fu_336_p2;
reg   [31:0] add_reg_1176;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] add3_reg_1181;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] xdiff_reg_1186;
reg   [31:0] xdiff_reg_1186_pp0_iter16_reg;
wire   [31:0] grp_fu_351_p2;
reg   [31:0] ydiff_reg_1193;
reg   [31:0] ydiff_reg_1193_pp0_iter16_reg;
reg   [31:0] mul_reg_1200;
wire   [31:0] insection_width_fu_835_p3;
reg   [31:0] insection_width_reg_1205;
wire   [31:0] insection_hight_fu_883_p3;
reg   [31:0] insection_hight_reg_1210;
wire   [31:0] grp_fu_356_p2;
reg   [31:0] add4_reg_1215;
reg   [31:0] add4_reg_1215_pp0_iter21_reg;
wire   [31:0] grp_fu_368_p2;
reg   [31:0] insection_area_reg_1220;
reg   [31:0] insection_area_reg_1220_pp0_iter22_reg;
reg   [31:0] insection_area_reg_1220_pp0_iter23_reg;
reg   [31:0] insection_area_reg_1220_pp0_iter24_reg;
reg   [31:0] insection_area_reg_1220_pp0_iter25_reg;
reg   [31:0] insection_area_reg_1220_pp0_iter26_reg;
wire   [31:0] grp_fu_360_p2;
reg   [31:0] union_area_reg_1226;
wire   [31:0] grp_fu_372_p2;
reg   [31:0] div_reg_1231;
wire   [63:0] zext_ln65_fu_431_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln67_fu_759_p1;
wire   [63:0] zext_ln68_fu_769_p1;
wire   [63:0] zext_ln69_fu_779_p1;
wire   [63:0] zext_ln70_fu_789_p1;
wire   [63:0] zext_ln80_fu_890_p1;
reg   [12:0] phi_mul_fu_96;
wire   [12:0] add_ln80_1_fu_448_p2;
wire    ap_loop_init;
reg   [6:0] j_fu_100;
wire   [6:0] add_ln65_fu_425_p2;
reg   [6:0] ap_sig_allocacmp_j_1;
wire   [12:0] add_ln80_fu_454_p2;
wire   [31:0] bitcast_ln67_1_fu_470_p1;
wire   [7:0] tmp_4_fu_473_p4;
wire   [22:0] trunc_ln67_fu_483_p1;
wire   [31:0] bitcast_ln68_1_fu_499_p1;
wire   [7:0] tmp_7_fu_502_p4;
wire   [22:0] trunc_ln68_fu_512_p1;
wire   [31:0] bitcast_ln69_1_fu_528_p1;
wire   [7:0] tmp_s_fu_531_p4;
wire   [22:0] trunc_ln69_fu_541_p1;
wire   [31:0] bitcast_ln70_1_fu_557_p1;
wire   [7:0] tmp_12_fu_560_p4;
wire   [22:0] trunc_ln70_fu_570_p1;
wire   [7:0] tmp_3_fu_586_p4;
wire   [0:0] icmp_ln67_1_fu_601_p2;
wire   [0:0] icmp_ln67_fu_595_p2;
wire   [0:0] or_ln67_fu_606_p2;
wire   [0:0] or_ln67_1_fu_612_p2;
wire   [0:0] and_ln67_fu_616_p2;
wire   [7:0] tmp_6_fu_628_p4;
wire   [0:0] icmp_ln68_1_fu_643_p2;
wire   [0:0] icmp_ln68_fu_637_p2;
wire   [0:0] or_ln68_fu_648_p2;
wire   [0:0] or_ln68_1_fu_654_p2;
wire   [0:0] and_ln68_fu_658_p2;
wire   [0:0] grp_fu_380_p2;
wire   [7:0] tmp_9_fu_670_p4;
wire   [0:0] icmp_ln69_1_fu_685_p2;
wire   [0:0] icmp_ln69_fu_679_p2;
wire   [0:0] or_ln69_fu_690_p2;
wire   [0:0] or_ln69_1_fu_696_p2;
wire   [0:0] and_ln69_fu_700_p2;
wire   [0:0] grp_fu_384_p2;
wire   [7:0] tmp_11_fu_712_p4;
wire   [0:0] icmp_ln70_1_fu_727_p2;
wire   [0:0] icmp_ln70_fu_721_p2;
wire   [0:0] or_ln70_fu_732_p2;
wire   [0:0] or_ln70_1_fu_738_p2;
wire   [0:0] and_ln70_fu_742_p2;
wire   [0:0] grp_fu_388_p2;
wire   [6:0] select_ln67_fu_754_p3;
wire   [6:0] select_ln68_fu_764_p3;
wire   [6:0] select_ln69_fu_774_p3;
wire   [6:0] select_ln70_fu_784_p3;
wire   [31:0] bitcast_ln75_fu_794_p1;
wire   [7:0] tmp_14_fu_797_p4;
wire   [22:0] trunc_ln75_fu_807_p1;
wire   [0:0] icmp_ln75_1_fu_817_p2;
wire   [0:0] icmp_ln75_fu_811_p2;
wire   [0:0] or_ln75_fu_823_p2;
wire   [0:0] grp_fu_392_p2;
wire   [0:0] and_ln75_fu_829_p2;
wire   [31:0] bitcast_ln76_fu_842_p1;
wire   [7:0] tmp_16_fu_845_p4;
wire   [22:0] trunc_ln76_fu_855_p1;
wire   [0:0] icmp_ln76_1_fu_865_p2;
wire   [0:0] icmp_ln76_fu_859_p2;
wire   [0:0] or_ln76_fu_871_p2;
wire   [0:0] grp_fu_397_p2;
wire   [0:0] and_ln76_fu_877_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 phi_mul_fu_96 = 13'd0;
#0 j_fu_100 = 7'd0;
#0 ap_done_reg = 1'b0;
end

nms_nms_Pipeline_VITIS_LOOP_65_7_map_arr_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 99 ),
    .AddressWidth( 7 ))
map_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(map_arr_address0),
    .ce0(map_arr_ce0),
    .q0(map_arr_q0)
);

nms_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xx2_reg_1146),
    .din1(xx1_reg_1136),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

nms_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(yy2_reg_1151),
    .din1(yy1_reg_1141),
    .ce(1'b1),
    .dout(grp_fu_332_p2)
);

nms_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub4_reg_1156),
    .din1(32'd1065353216),
    .ce(1'b1),
    .dout(grp_fu_336_p2)
);

nms_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub5_reg_1161),
    .din1(32'd1065353216),
    .ce(1'b1),
    .dout(grp_fu_341_p2)
);

nms_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_reg_1166),
    .din1(32'd1065353216),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

nms_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub3_reg_1171),
    .din1(32'd1065353216),
    .ce(1'b1),
    .dout(grp_fu_351_p2)
);

nms_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul1),
    .din1(mul_reg_1200),
    .ce(1'b1),
    .dout(grp_fu_356_p2)
);

nms_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add4_reg_1215_pp0_iter21_reg),
    .din1(insection_area_reg_1220),
    .ce(1'b1),
    .dout(grp_fu_360_p2)
);

nms_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(insection_width_reg_1205),
    .din1(insection_hight_reg_1210),
    .ce(1'b1),
    .dout(grp_fu_368_p2)
);

nms_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(insection_area_reg_1220_pp0_iter26_reg),
    .din1(union_area_reg_1226),
    .ce(1'b1),
    .dout(grp_fu_372_p2)
);

nms_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bboxes_info_y1_load),
    .din1(bboxes_info_y1_load_1_reg_1030),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_380_p2)
);

nms_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bboxes_info_x2_load),
    .din1(bboxes_info_x2_load_1_reg_1037),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_384_p2)
);

nms_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bboxes_info_y2_load),
    .din1(bboxes_info_y2_load_1_reg_1044),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_388_p2)
);

nms_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xdiff_reg_1186),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_392_p2)
);

nms_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ydiff_reg_1193),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_397_p2)
);

nms_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter42_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln65_fu_419_p2 == 1'd0))) begin
            j_fu_100 <= add_ln65_fu_425_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_100 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_96 <= 13'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_mul_fu_96 <= add_ln80_1_fu_448_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add3_reg_1181 <= grp_fu_341_p2;
        add4_reg_1215 <= grp_fu_356_p2;
        add4_reg_1215_pp0_iter21_reg <= add4_reg_1215;
        add_reg_1176 <= grp_fu_336_p2;
        and_ln67_1_reg_1096 <= and_ln67_1_fu_622_p2;
        and_ln68_1_reg_1101 <= and_ln68_1_fu_664_p2;
        and_ln69_1_reg_1106 <= and_ln69_1_fu_706_p2;
        and_ln70_1_reg_1111 <= and_ln70_1_fu_748_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        div_reg_1231 <= grp_fu_372_p2;
        icmp_ln67_2_reg_1056 <= icmp_ln67_2_fu_487_p2;
        icmp_ln67_3_reg_1061 <= icmp_ln67_3_fu_493_p2;
        icmp_ln68_2_reg_1066 <= icmp_ln68_2_fu_516_p2;
        icmp_ln68_3_reg_1071 <= icmp_ln68_3_fu_522_p2;
        icmp_ln69_2_reg_1076 <= icmp_ln69_2_fu_545_p2;
        icmp_ln69_3_reg_1081 <= icmp_ln69_3_fu_551_p2;
        icmp_ln70_2_reg_1086 <= icmp_ln70_2_fu_574_p2;
        icmp_ln70_3_reg_1091 <= icmp_ln70_3_fu_580_p2;
        insection_area_reg_1220 <= grp_fu_368_p2;
        insection_area_reg_1220_pp0_iter22_reg <= insection_area_reg_1220;
        insection_area_reg_1220_pp0_iter23_reg <= insection_area_reg_1220_pp0_iter22_reg;
        insection_area_reg_1220_pp0_iter24_reg <= insection_area_reg_1220_pp0_iter23_reg;
        insection_area_reg_1220_pp0_iter25_reg <= insection_area_reg_1220_pp0_iter24_reg;
        insection_area_reg_1220_pp0_iter26_reg <= insection_area_reg_1220_pp0_iter25_reg;
        insection_hight_reg_1210 <= insection_hight_fu_883_p3;
        insection_width_reg_1205 <= insection_width_fu_835_p3;
        j_1_reg_986_pp0_iter2_reg <= j_1_reg_986_pp0_iter1_reg;
        j_1_reg_986_pp0_iter3_reg <= j_1_reg_986_pp0_iter2_reg;
        mul_reg_1200 <= grp_fu_5854_p_dout0;
        sub3_reg_1171 <= grp_fu_332_p2;
        sub4_reg_1156 <= grp_fu_5844_p_dout0;
        sub5_reg_1161 <= grp_fu_5848_p_dout0;
        sub_ln80_reg_1051_pp0_iter10_reg <= sub_ln80_reg_1051_pp0_iter9_reg;
        sub_ln80_reg_1051_pp0_iter11_reg <= sub_ln80_reg_1051_pp0_iter10_reg;
        sub_ln80_reg_1051_pp0_iter12_reg <= sub_ln80_reg_1051_pp0_iter11_reg;
        sub_ln80_reg_1051_pp0_iter13_reg <= sub_ln80_reg_1051_pp0_iter12_reg;
        sub_ln80_reg_1051_pp0_iter14_reg <= sub_ln80_reg_1051_pp0_iter13_reg;
        sub_ln80_reg_1051_pp0_iter15_reg <= sub_ln80_reg_1051_pp0_iter14_reg;
        sub_ln80_reg_1051_pp0_iter16_reg <= sub_ln80_reg_1051_pp0_iter15_reg;
        sub_ln80_reg_1051_pp0_iter17_reg <= sub_ln80_reg_1051_pp0_iter16_reg;
        sub_ln80_reg_1051_pp0_iter18_reg <= sub_ln80_reg_1051_pp0_iter17_reg;
        sub_ln80_reg_1051_pp0_iter19_reg <= sub_ln80_reg_1051_pp0_iter18_reg;
        sub_ln80_reg_1051_pp0_iter20_reg <= sub_ln80_reg_1051_pp0_iter19_reg;
        sub_ln80_reg_1051_pp0_iter21_reg <= sub_ln80_reg_1051_pp0_iter20_reg;
        sub_ln80_reg_1051_pp0_iter22_reg <= sub_ln80_reg_1051_pp0_iter21_reg;
        sub_ln80_reg_1051_pp0_iter23_reg <= sub_ln80_reg_1051_pp0_iter22_reg;
        sub_ln80_reg_1051_pp0_iter24_reg <= sub_ln80_reg_1051_pp0_iter23_reg;
        sub_ln80_reg_1051_pp0_iter25_reg <= sub_ln80_reg_1051_pp0_iter24_reg;
        sub_ln80_reg_1051_pp0_iter26_reg <= sub_ln80_reg_1051_pp0_iter25_reg;
        sub_ln80_reg_1051_pp0_iter27_reg <= sub_ln80_reg_1051_pp0_iter26_reg;
        sub_ln80_reg_1051_pp0_iter28_reg <= sub_ln80_reg_1051_pp0_iter27_reg;
        sub_ln80_reg_1051_pp0_iter29_reg <= sub_ln80_reg_1051_pp0_iter28_reg;
        sub_ln80_reg_1051_pp0_iter2_reg <= sub_ln80_reg_1051;
        sub_ln80_reg_1051_pp0_iter30_reg <= sub_ln80_reg_1051_pp0_iter29_reg;
        sub_ln80_reg_1051_pp0_iter31_reg <= sub_ln80_reg_1051_pp0_iter30_reg;
        sub_ln80_reg_1051_pp0_iter32_reg <= sub_ln80_reg_1051_pp0_iter31_reg;
        sub_ln80_reg_1051_pp0_iter33_reg <= sub_ln80_reg_1051_pp0_iter32_reg;
        sub_ln80_reg_1051_pp0_iter34_reg <= sub_ln80_reg_1051_pp0_iter33_reg;
        sub_ln80_reg_1051_pp0_iter35_reg <= sub_ln80_reg_1051_pp0_iter34_reg;
        sub_ln80_reg_1051_pp0_iter36_reg <= sub_ln80_reg_1051_pp0_iter35_reg;
        sub_ln80_reg_1051_pp0_iter37_reg <= sub_ln80_reg_1051_pp0_iter36_reg;
        sub_ln80_reg_1051_pp0_iter38_reg <= sub_ln80_reg_1051_pp0_iter37_reg;
        sub_ln80_reg_1051_pp0_iter39_reg <= sub_ln80_reg_1051_pp0_iter38_reg;
        sub_ln80_reg_1051_pp0_iter3_reg <= sub_ln80_reg_1051_pp0_iter2_reg;
        sub_ln80_reg_1051_pp0_iter40_reg <= sub_ln80_reg_1051_pp0_iter39_reg;
        sub_ln80_reg_1051_pp0_iter41_reg <= sub_ln80_reg_1051_pp0_iter40_reg;
        sub_ln80_reg_1051_pp0_iter42_reg <= sub_ln80_reg_1051_pp0_iter41_reg;
        sub_ln80_reg_1051_pp0_iter4_reg <= sub_ln80_reg_1051_pp0_iter3_reg;
        sub_ln80_reg_1051_pp0_iter5_reg <= sub_ln80_reg_1051_pp0_iter4_reg;
        sub_ln80_reg_1051_pp0_iter6_reg <= sub_ln80_reg_1051_pp0_iter5_reg;
        sub_ln80_reg_1051_pp0_iter7_reg <= sub_ln80_reg_1051_pp0_iter6_reg;
        sub_ln80_reg_1051_pp0_iter8_reg <= sub_ln80_reg_1051_pp0_iter7_reg;
        sub_ln80_reg_1051_pp0_iter9_reg <= sub_ln80_reg_1051_pp0_iter8_reg;
        sub_reg_1166 <= grp_fu_328_p2;
        union_area_reg_1226 <= grp_fu_360_p2;
        xdiff_reg_1186 <= grp_fu_346_p2;
        xdiff_reg_1186_pp0_iter16_reg <= xdiff_reg_1186;
        ydiff_reg_1193 <= grp_fu_351_p2;
        ydiff_reg_1193_pp0_iter16_reg <= ydiff_reg_1193;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_2_cast_cast_reg_981[6 : 0] <= i_2_cast_cast_fu_402_p1[6 : 0];
        j_1_reg_986 <= ap_sig_allocacmp_j_1;
        j_1_reg_986_pp0_iter1_reg <= j_1_reg_986;
        sub_ln80_reg_1051 <= sub_ln80_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_x1_load_1_reg_1023 <= bboxes_info_x1_q1;
        bboxes_info_x2_load_1_reg_1037 <= bboxes_info_x2_q1;
        bboxes_info_y1_load_1_reg_1030 <= bboxes_info_y1_q1;
        bboxes_info_y2_load_1_reg_1044 <= bboxes_info_y2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        xx1_reg_1136 <= bboxes_info_x1_q0;
        xx2_reg_1146 <= bboxes_info_x2_q0;
        yy1_reg_1141 <= bboxes_info_y1_q0;
        yy2_reg_1151 <= bboxes_info_y2_q0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln65_fu_419_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter42_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) 
    & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_100;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_x1_ce0 = 1'b1;
    end else begin
        bboxes_info_x1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_x1_ce1 = 1'b1;
    end else begin
        bboxes_info_x1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_x2_ce0 = 1'b1;
    end else begin
        bboxes_info_x2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_x2_ce1 = 1'b1;
    end else begin
        bboxes_info_x2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_y1_ce0 = 1'b1;
    end else begin
        bboxes_info_y1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_y1_ce1 = 1'b1;
    end else begin
        bboxes_info_y1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_y2_ce0 = 1'b1;
    end else begin
        bboxes_info_y2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bboxes_info_y2_ce1 = 1'b1;
    end else begin
        bboxes_info_y2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        iou_matrix_ce0 = 1'b1;
    end else begin
        iou_matrix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        iou_matrix_we0 = 1'b1;
    end else begin
        iou_matrix_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        map_arr_ce0 = 1'b1;
    end else begin
        map_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln65_fu_425_p2 = (ap_sig_allocacmp_j_1 + 7'd1);

assign add_ln80_1_fu_448_p2 = (phi_mul_fu_96 + 13'd100);

assign add_ln80_fu_454_p2 = (i_2_cast_cast_reg_981 + phi_mul_fu_96);

assign and_ln67_1_fu_622_p2 = (grp_fu_5858_p_dout0 & and_ln67_fu_616_p2);

assign and_ln67_fu_616_p2 = (or_ln67_fu_606_p2 & or_ln67_1_fu_612_p2);

assign and_ln68_1_fu_664_p2 = (grp_fu_380_p2 & and_ln68_fu_658_p2);

assign and_ln68_fu_658_p2 = (or_ln68_fu_648_p2 & or_ln68_1_fu_654_p2);

assign and_ln69_1_fu_706_p2 = (grp_fu_384_p2 & and_ln69_fu_700_p2);

assign and_ln69_fu_700_p2 = (or_ln69_fu_690_p2 & or_ln69_1_fu_696_p2);

assign and_ln70_1_fu_748_p2 = (grp_fu_388_p2 & and_ln70_fu_742_p2);

assign and_ln70_fu_742_p2 = (or_ln70_fu_732_p2 & or_ln70_1_fu_738_p2);

assign and_ln75_fu_829_p2 = (or_ln75_fu_823_p2 & grp_fu_392_p2);

assign and_ln76_fu_877_p2 = (or_ln76_fu_871_p2 & grp_fu_397_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bboxes_info_x1_address0 = zext_ln67_fu_759_p1;

assign bboxes_info_x1_address1 = zext_ln65_fu_431_p1;

assign bboxes_info_x2_address0 = zext_ln69_fu_779_p1;

assign bboxes_info_x2_address1 = zext_ln65_fu_431_p1;

assign bboxes_info_y1_address0 = zext_ln68_fu_769_p1;

assign bboxes_info_y1_address1 = zext_ln65_fu_431_p1;

assign bboxes_info_y2_address0 = zext_ln70_fu_789_p1;

assign bboxes_info_y2_address1 = zext_ln65_fu_431_p1;

assign bitcast_ln67_1_fu_470_p1 = bboxes_info_x1_load_1_reg_1023;

assign bitcast_ln68_1_fu_499_p1 = bboxes_info_y1_load_1_reg_1030;

assign bitcast_ln69_1_fu_528_p1 = bboxes_info_x2_load_1_reg_1037;

assign bitcast_ln70_1_fu_557_p1 = bboxes_info_y2_load_1_reg_1044;

assign bitcast_ln75_fu_794_p1 = xdiff_reg_1186_pp0_iter16_reg;

assign bitcast_ln76_fu_842_p1 = ydiff_reg_1193_pp0_iter16_reg;

assign grp_fu_5844_p_ce = 1'b1;

assign grp_fu_5844_p_din0 = bboxes_info_x2_load_1_reg_1037;

assign grp_fu_5844_p_din1 = bboxes_info_x1_load_1_reg_1023;

assign grp_fu_5844_p_opcode = 2'd1;

assign grp_fu_5848_p_ce = 1'b1;

assign grp_fu_5848_p_din0 = bboxes_info_y2_load_1_reg_1044;

assign grp_fu_5848_p_din1 = bboxes_info_y1_load_1_reg_1030;

assign grp_fu_5848_p_opcode = 2'd1;

assign grp_fu_5854_p_ce = 1'b1;

assign grp_fu_5854_p_din0 = add_reg_1176;

assign grp_fu_5854_p_din1 = add3_reg_1181;

assign grp_fu_5858_p_ce = 1'b1;

assign grp_fu_5858_p_din0 = bboxes_info_x1_load;

assign grp_fu_5858_p_din1 = bboxes_info_x1_load_1_reg_1023;

assign grp_fu_5858_p_opcode = 5'd2;

assign i_2_cast_cast_fu_402_p1 = i_2_cast;

assign icmp_ln65_fu_419_p2 = ((ap_sig_allocacmp_j_1 == i_2) ? 1'b1 : 1'b0);

assign icmp_ln67_1_fu_601_p2 = ((empty_21 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln67_2_fu_487_p2 = ((tmp_4_fu_473_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln67_3_fu_493_p2 = ((trunc_ln67_fu_483_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_595_p2 = ((tmp_3_fu_586_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln68_1_fu_643_p2 = ((empty_22 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_2_fu_516_p2 = ((tmp_7_fu_502_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln68_3_fu_522_p2 = ((trunc_ln68_fu_512_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_637_p2 = ((tmp_6_fu_628_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln69_1_fu_685_p2 = ((empty_23 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_2_fu_545_p2 = ((tmp_s_fu_531_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln69_3_fu_551_p2 = ((trunc_ln69_fu_541_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_679_p2 = ((tmp_9_fu_670_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln70_1_fu_727_p2 = ((empty == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln70_2_fu_574_p2 = ((tmp_12_fu_560_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln70_3_fu_580_p2 = ((trunc_ln70_fu_570_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_721_p2 = ((tmp_11_fu_712_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln75_1_fu_817_p2 = ((trunc_ln75_fu_807_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_811_p2 = ((tmp_14_fu_797_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln76_1_fu_865_p2 = ((trunc_ln76_fu_855_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_859_p2 = ((tmp_16_fu_845_p4 != 8'd255) ? 1'b1 : 1'b0);

assign insection_hight_fu_883_p3 = ((and_ln76_fu_877_p2[0:0] == 1'b1) ? ydiff_reg_1193_pp0_iter16_reg : 32'd0);

assign insection_width_fu_835_p3 = ((and_ln75_fu_829_p2[0:0] == 1'b1) ? xdiff_reg_1186_pp0_iter16_reg : 32'd0);

assign iou_matrix_address0 = zext_ln80_fu_890_p1;

assign iou_matrix_d0 = div_reg_1231;

assign map_arr_address0 = zext_ln65_fu_431_p1;

assign or_ln67_1_fu_612_p2 = (icmp_ln67_3_reg_1061 | icmp_ln67_2_reg_1056);

assign or_ln67_fu_606_p2 = (icmp_ln67_fu_595_p2 | icmp_ln67_1_fu_601_p2);

assign or_ln68_1_fu_654_p2 = (icmp_ln68_3_reg_1071 | icmp_ln68_2_reg_1066);

assign or_ln68_fu_648_p2 = (icmp_ln68_fu_637_p2 | icmp_ln68_1_fu_643_p2);

assign or_ln69_1_fu_696_p2 = (icmp_ln69_3_reg_1081 | icmp_ln69_2_reg_1076);

assign or_ln69_fu_690_p2 = (icmp_ln69_fu_679_p2 | icmp_ln69_1_fu_685_p2);

assign or_ln70_1_fu_738_p2 = (icmp_ln70_3_reg_1091 | icmp_ln70_2_reg_1086);

assign or_ln70_fu_732_p2 = (icmp_ln70_fu_721_p2 | icmp_ln70_1_fu_727_p2);

assign or_ln75_fu_823_p2 = (icmp_ln75_fu_811_p2 | icmp_ln75_1_fu_817_p2);

assign or_ln76_fu_871_p2 = (icmp_ln76_fu_859_p2 | icmp_ln76_1_fu_865_p2);

assign select_ln67_fu_754_p3 = ((and_ln67_1_reg_1096[0:0] == 1'b1) ? i_2 : j_1_reg_986_pp0_iter3_reg);

assign select_ln68_fu_764_p3 = ((and_ln68_1_reg_1101[0:0] == 1'b1) ? i_2 : j_1_reg_986_pp0_iter3_reg);

assign select_ln69_fu_774_p3 = ((and_ln69_1_reg_1106[0:0] == 1'b1) ? i_2 : j_1_reg_986_pp0_iter3_reg);

assign select_ln70_fu_784_p3 = ((and_ln70_1_reg_1111[0:0] == 1'b1) ? i_2 : j_1_reg_986_pp0_iter3_reg);

assign sub_ln80_fu_459_p2 = (add_ln80_fu_454_p2 - map_arr_q0);

assign tmp_11_fu_712_p4 = {{bitcast_ln70[30:23]}};

assign tmp_12_fu_560_p4 = {{bitcast_ln70_1_fu_557_p1[30:23]}};

assign tmp_14_fu_797_p4 = {{bitcast_ln75_fu_794_p1[30:23]}};

assign tmp_16_fu_845_p4 = {{bitcast_ln76_fu_842_p1[30:23]}};

assign tmp_3_fu_586_p4 = {{bitcast_ln67[30:23]}};

assign tmp_4_fu_473_p4 = {{bitcast_ln67_1_fu_470_p1[30:23]}};

assign tmp_6_fu_628_p4 = {{bitcast_ln68[30:23]}};

assign tmp_7_fu_502_p4 = {{bitcast_ln68_1_fu_499_p1[30:23]}};

assign tmp_9_fu_670_p4 = {{bitcast_ln69[30:23]}};

assign tmp_s_fu_531_p4 = {{bitcast_ln69_1_fu_528_p1[30:23]}};

assign trunc_ln67_fu_483_p1 = bitcast_ln67_1_fu_470_p1[22:0];

assign trunc_ln68_fu_512_p1 = bitcast_ln68_1_fu_499_p1[22:0];

assign trunc_ln69_fu_541_p1 = bitcast_ln69_1_fu_528_p1[22:0];

assign trunc_ln70_fu_570_p1 = bitcast_ln70_1_fu_557_p1[22:0];

assign trunc_ln75_fu_807_p1 = bitcast_ln75_fu_794_p1[22:0];

assign trunc_ln76_fu_855_p1 = bitcast_ln76_fu_842_p1[22:0];

assign zext_ln65_fu_431_p1 = ap_sig_allocacmp_j_1;

assign zext_ln67_fu_759_p1 = select_ln67_fu_754_p3;

assign zext_ln68_fu_769_p1 = select_ln68_fu_764_p3;

assign zext_ln69_fu_779_p1 = select_ln69_fu_774_p3;

assign zext_ln70_fu_789_p1 = select_ln70_fu_784_p3;

assign zext_ln80_fu_890_p1 = sub_ln80_reg_1051_pp0_iter42_reg;

always @ (posedge ap_clk) begin
    i_2_cast_cast_reg_981[12:7] <= 6'b000000;
end

endmodule //nms_nms_Pipeline_VITIS_LOOP_65_7
