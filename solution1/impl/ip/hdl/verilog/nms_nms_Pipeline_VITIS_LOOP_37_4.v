// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module nms_nms_Pipeline_VITIS_LOOP_37_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln36,
        zext_ln24,
        bboxes_info_score_address0,
        bboxes_info_score_ce0,
        bboxes_info_score_we0,
        bboxes_info_score_d0,
        bboxes_info_score_address1,
        bboxes_info_score_ce1,
        bboxes_info_score_q1,
        tmp_1,
        empty,
        temp_score,
        zext_ln27,
        bboxes_info_index_address0,
        bboxes_info_index_ce0,
        bboxes_info_index_we0,
        bboxes_info_index_d0,
        bboxes_info_index_q0,
        bboxes_info_y2_address0,
        bboxes_info_y2_ce0,
        bboxes_info_y2_we0,
        bboxes_info_y2_d0,
        bboxes_info_y2_q0,
        bboxes_info_x2_address0,
        bboxes_info_x2_ce0,
        bboxes_info_x2_we0,
        bboxes_info_x2_d0,
        bboxes_info_x2_q0,
        bboxes_info_y1_address0,
        bboxes_info_y1_ce0,
        bboxes_info_y1_we0,
        bboxes_info_y1_d0,
        bboxes_info_y1_q0,
        bboxes_info_x1_address0,
        bboxes_info_x1_ce0,
        bboxes_info_x1_we0,
        bboxes_info_x1_d0,
        bboxes_info_x1_q0,
        zext_ln46_out,
        zext_ln46_out_ap_vld,
        grp_fu_5858_p_din0,
        grp_fu_5858_p_din1,
        grp_fu_5858_p_opcode,
        grp_fu_5858_p_dout0,
        grp_fu_5858_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [6:0] zext_ln36;
input  [5:0] zext_ln24;
output  [6:0] bboxes_info_score_address0;
output   bboxes_info_score_ce0;
output   bboxes_info_score_we0;
output  [31:0] bboxes_info_score_d0;
output  [6:0] bboxes_info_score_address1;
output   bboxes_info_score_ce1;
input  [31:0] bboxes_info_score_q1;
input  [7:0] tmp_1;
input  [22:0] empty;
input  [31:0] temp_score;
input  [5:0] zext_ln27;
output  [6:0] bboxes_info_index_address0;
output   bboxes_info_index_ce0;
output   bboxes_info_index_we0;
output  [6:0] bboxes_info_index_d0;
input  [6:0] bboxes_info_index_q0;
output  [6:0] bboxes_info_y2_address0;
output   bboxes_info_y2_ce0;
output   bboxes_info_y2_we0;
output  [31:0] bboxes_info_y2_d0;
input  [31:0] bboxes_info_y2_q0;
output  [6:0] bboxes_info_x2_address0;
output   bboxes_info_x2_ce0;
output   bboxes_info_x2_we0;
output  [31:0] bboxes_info_x2_d0;
input  [31:0] bboxes_info_x2_q0;
output  [6:0] bboxes_info_y1_address0;
output   bboxes_info_y1_ce0;
output   bboxes_info_y1_we0;
output  [31:0] bboxes_info_y1_d0;
input  [31:0] bboxes_info_y1_q0;
output  [6:0] bboxes_info_x1_address0;
output   bboxes_info_x1_ce0;
output   bboxes_info_x1_we0;
output  [31:0] bboxes_info_x1_d0;
input  [31:0] bboxes_info_x1_q0;
output  [6:0] zext_ln46_out;
output   zext_ln46_out_ap_vld;
output  [31:0] grp_fu_5858_p_din0;
output  [31:0] grp_fu_5858_p_din1;
output  [4:0] grp_fu_5858_p_opcode;
input  [0:0] grp_fu_5858_p_dout0;
output   grp_fu_5858_p_ce;

reg ap_idle;
reg bboxes_info_score_ce0;
reg bboxes_info_score_we0;
reg bboxes_info_score_ce1;
reg[6:0] bboxes_info_index_address0;
reg bboxes_info_index_ce0;
reg bboxes_info_index_we0;
reg[6:0] bboxes_info_y2_address0;
reg bboxes_info_y2_ce0;
reg bboxes_info_y2_we0;
reg[6:0] bboxes_info_x2_address0;
reg bboxes_info_x2_ce0;
reg bboxes_info_x2_we0;
reg[6:0] bboxes_info_y1_address0;
reg bboxes_info_y1_ce0;
reg bboxes_info_y1_we0;
reg[6:0] bboxes_info_x1_address0;
reg bboxes_info_x1_ce0;
reg bboxes_info_x1_we0;
reg zext_ln46_out_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_subdone;
wire   [0:0] and_ln37_1_fu_475_p2;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] preIndex_fu_379_p2;
reg   [15:0] preIndex_reg_732;
wire   [63:0] zext_ln37_fu_385_p1;
reg   [63:0] zext_ln37_reg_737;
wire   [0:0] icmp_ln37_2_fu_390_p2;
reg   [0:0] icmp_ln37_2_reg_757;
wire   [0:0] icmp_ln37_3_fu_396_p2;
reg   [0:0] icmp_ln37_3_reg_762;
wire   [6:0] add_ln46_fu_406_p2;
reg   [6:0] add_ln46_reg_767;
reg   [31:0] bboxes_info_score_load_reg_773;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] addr_cmp17_fu_415_p2;
reg   [0:0] addr_cmp17_reg_778;
wire   [31:0] reuse_select18_fu_423_p3;
reg   [31:0] reuse_select18_reg_783;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire   [63:0] zext_ln46_fu_481_p1;
reg   [63:0] zext_ln46_reg_794;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] addr_cmp41_fu_487_p2;
reg   [0:0] addr_cmp41_reg_815;
wire   [0:0] addr_cmp35_fu_495_p2;
reg   [0:0] addr_cmp35_reg_825;
wire   [0:0] addr_cmp29_fu_503_p2;
reg   [0:0] addr_cmp29_reg_835;
wire   [0:0] addr_cmp23_fu_511_p2;
reg   [0:0] addr_cmp23_reg_845;
wire   [0:0] addr_cmp_fu_519_p2;
reg   [0:0] addr_cmp_reg_855;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage3;
reg   [63:0] reuse_addr_reg38_fu_70;
wire    ap_loop_init;
reg   [31:0] reuse_reg37_fu_74;
wire   [31:0] reuse_select42_fu_527_p3;
reg   [63:0] reuse_addr_reg32_fu_78;
reg   [31:0] reuse_reg31_fu_82;
wire   [31:0] reuse_select36_fu_547_p3;
reg   [63:0] reuse_addr_reg26_fu_86;
reg   [31:0] reuse_reg25_fu_90;
wire   [31:0] reuse_select30_fu_567_p3;
reg   [63:0] reuse_addr_reg20_fu_94;
reg   [31:0] reuse_reg19_fu_98;
wire   [31:0] reuse_select24_fu_587_p3;
reg   [63:0] reuse_addr_reg14_fu_102;
wire    ap_block_pp0_stage1;
reg   [31:0] reuse_reg13_fu_106;
wire    ap_block_pp0_stage2;
reg   [63:0] reuse_addr_reg_fu_110;
reg   [6:0] reuse_reg_fu_114;
wire   [6:0] reuse_select_fu_615_p3;
reg   [15:0] p_pn_fu_118;
wire   [15:0] zext_ln36_cast_fu_307_p1;
reg   [15:0] ap_sig_allocacmp_p_pn_load;
wire    ap_block_pp0_stage3_01001;
wire   [15:0] zext_ln24_cast_fu_303_p1;
wire   [6:0] trunc_ln46_fu_402_p1;
wire   [6:0] zext_ln27_cast_fu_299_p1;
wire   [31:0] bitcast_ln37_fu_430_p1;
wire   [7:0] tmp_fu_433_p4;
wire   [22:0] trunc_ln37_fu_443_p1;
wire   [0:0] icmp_ln37_1_fu_453_p2;
wire   [0:0] icmp_ln37_fu_447_p2;
wire   [0:0] or_ln37_1_fu_465_p2;
wire   [0:0] and_ln37_fu_469_p2;
wire   [0:0] or_ln37_fu_459_p2;
wire    ap_block_pp0_stage2_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 reuse_addr_reg38_fu_70 = 64'd0;
#0 reuse_reg37_fu_74 = 32'd0;
#0 reuse_addr_reg32_fu_78 = 64'd0;
#0 reuse_reg31_fu_82 = 32'd0;
#0 reuse_addr_reg26_fu_86 = 64'd0;
#0 reuse_reg25_fu_90 = 32'd0;
#0 reuse_addr_reg20_fu_94 = 64'd0;
#0 reuse_reg19_fu_98 = 32'd0;
#0 reuse_addr_reg14_fu_102 = 64'd0;
#0 reuse_reg13_fu_106 = 32'd0;
#0 reuse_addr_reg_fu_110 = 64'd0;
#0 reuse_reg_fu_114 = 7'd0;
#0 p_pn_fu_118 = 16'd0;
#0 ap_done_reg = 1'b0;
end

nms_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter0_stage3) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_pn_fu_118 <= zext_ln36_cast_fu_307_p1;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_pn_fu_118 <= preIndex_reg_732;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg14_fu_102 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_addr_reg14_fu_102 <= zext_ln46_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg20_fu_94 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_addr_reg20_fu_94 <= zext_ln46_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg26_fu_86 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_addr_reg26_fu_86 <= zext_ln46_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg32_fu_78 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_addr_reg32_fu_78 <= zext_ln46_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg38_fu_70 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_addr_reg38_fu_70 <= zext_ln46_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg_fu_110 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_addr_reg_fu_110 <= zext_ln46_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg13_fu_106 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_reg13_fu_106 <= reuse_select18_reg_783;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg19_fu_98 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_reg19_fu_98 <= reuse_select24_fu_587_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg25_fu_90 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_reg25_fu_90 <= reuse_select30_fu_567_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg31_fu_82 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_reg31_fu_82 <= reuse_select36_fu_547_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg37_fu_74 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_reg37_fu_74 <= reuse_select42_fu_527_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg_fu_114 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            reuse_reg_fu_114 <= reuse_select_fu_615_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln46_reg_767 <= add_ln46_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        addr_cmp17_reg_778 <= addr_cmp17_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        addr_cmp23_reg_845 <= addr_cmp23_fu_511_p2;
        addr_cmp29_reg_835 <= addr_cmp29_fu_503_p2;
        addr_cmp35_reg_825 <= addr_cmp35_fu_495_p2;
        addr_cmp41_reg_815 <= addr_cmp41_fu_487_p2;
        addr_cmp_reg_855 <= addr_cmp_fu_519_p2;
        zext_ln46_reg_794[6 : 0] <= zext_ln46_fu_481_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bboxes_info_score_load_reg_773 <= bboxes_info_score_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln37_2_reg_757 <= icmp_ln37_2_fu_390_p2;
        icmp_ln37_3_reg_762 <= icmp_ln37_3_fu_396_p2;
        preIndex_reg_732 <= preIndex_fu_379_p2;
        zext_ln37_reg_737[15 : 0] <= zext_ln37_fu_385_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reuse_select18_reg_783 <= reuse_select18_fu_423_p3;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln37_1_fu_475_p2) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_p_pn_load = zext_ln36_cast_fu_307_p1;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_p_pn_load = preIndex_reg_732;
        end else begin
            ap_sig_allocacmp_p_pn_load = p_pn_fu_118;
        end
    end else begin
        ap_sig_allocacmp_p_pn_load = p_pn_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_index_address0 = zext_ln46_reg_794;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        bboxes_info_index_address0 = zext_ln37_reg_737;
    end else begin
        bboxes_info_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bboxes_info_index_ce0 = 1'b1;
    end else begin
        bboxes_info_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_index_we0 = 1'b1;
    end else begin
        bboxes_info_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_score_ce0 = 1'b1;
    end else begin
        bboxes_info_score_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_score_ce1 = 1'b1;
    end else begin
        bboxes_info_score_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_score_we0 = 1'b1;
    end else begin
        bboxes_info_score_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_x1_address0 = zext_ln46_reg_794;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        bboxes_info_x1_address0 = zext_ln37_reg_737;
    end else begin
        bboxes_info_x1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bboxes_info_x1_ce0 = 1'b1;
    end else begin
        bboxes_info_x1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_x1_we0 = 1'b1;
    end else begin
        bboxes_info_x1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_x2_address0 = zext_ln46_reg_794;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        bboxes_info_x2_address0 = zext_ln37_reg_737;
    end else begin
        bboxes_info_x2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bboxes_info_x2_ce0 = 1'b1;
    end else begin
        bboxes_info_x2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_x2_we0 = 1'b1;
    end else begin
        bboxes_info_x2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_y1_address0 = zext_ln46_reg_794;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        bboxes_info_y1_address0 = zext_ln37_reg_737;
    end else begin
        bboxes_info_y1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bboxes_info_y1_ce0 = 1'b1;
    end else begin
        bboxes_info_y1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_y1_we0 = 1'b1;
    end else begin
        bboxes_info_y1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_y2_address0 = zext_ln46_reg_794;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        bboxes_info_y2_address0 = zext_ln37_reg_737;
    end else begin
        bboxes_info_y2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bboxes_info_y2_ce0 = 1'b1;
    end else begin
        bboxes_info_y2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_info_y2_we0 = 1'b1;
    end else begin
        bboxes_info_y2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln37_1_fu_475_p2) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        zext_ln46_out_ap_vld = 1'b1;
    end else begin
        zext_ln46_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln46_fu_406_p2 = (trunc_ln46_fu_402_p1 + zext_ln27_cast_fu_299_p1);

assign addr_cmp17_fu_415_p2 = ((reuse_addr_reg14_fu_102 == zext_ln37_reg_737) ? 1'b1 : 1'b0);

assign addr_cmp23_fu_511_p2 = ((reuse_addr_reg20_fu_94 == zext_ln37_reg_737) ? 1'b1 : 1'b0);

assign addr_cmp29_fu_503_p2 = ((reuse_addr_reg26_fu_86 == zext_ln37_reg_737) ? 1'b1 : 1'b0);

assign addr_cmp35_fu_495_p2 = ((reuse_addr_reg32_fu_78 == zext_ln37_reg_737) ? 1'b1 : 1'b0);

assign addr_cmp41_fu_487_p2 = ((reuse_addr_reg38_fu_70 == zext_ln37_reg_737) ? 1'b1 : 1'b0);

assign addr_cmp_fu_519_p2 = ((reuse_addr_reg_fu_110 == zext_ln37_reg_737) ? 1'b1 : 1'b0);

assign and_ln37_1_fu_475_p2 = (or_ln37_fu_459_p2 & and_ln37_fu_469_p2);

assign and_ln37_fu_469_p2 = (or_ln37_1_fu_465_p2 & grp_fu_5858_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign bboxes_info_index_d0 = ((addr_cmp_reg_855[0:0] == 1'b1) ? reuse_reg_fu_114 : bboxes_info_index_q0);

assign bboxes_info_score_address0 = zext_ln46_reg_794;

assign bboxes_info_score_address1 = zext_ln37_fu_385_p1;

assign bboxes_info_score_d0 = reuse_select18_reg_783;

assign bboxes_info_x1_d0 = ((addr_cmp41_reg_815[0:0] == 1'b1) ? reuse_reg37_fu_74 : bboxes_info_x1_q0);

assign bboxes_info_x2_d0 = ((addr_cmp29_reg_835[0:0] == 1'b1) ? reuse_reg25_fu_90 : bboxes_info_x2_q0);

assign bboxes_info_y1_d0 = ((addr_cmp35_reg_825[0:0] == 1'b1) ? reuse_reg31_fu_82 : bboxes_info_y1_q0);

assign bboxes_info_y2_d0 = ((addr_cmp23_reg_845[0:0] == 1'b1) ? reuse_reg19_fu_98 : bboxes_info_y2_q0);

assign bitcast_ln37_fu_430_p1 = reuse_select18_reg_783;

assign grp_fu_5858_p_ce = 1'b1;

assign grp_fu_5858_p_din0 = reuse_select18_fu_423_p3;

assign grp_fu_5858_p_din1 = temp_score;

assign grp_fu_5858_p_opcode = 5'd4;

assign icmp_ln37_1_fu_453_p2 = ((trunc_ln37_fu_443_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_2_fu_390_p2 = ((tmp_1 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln37_3_fu_396_p2 = ((empty == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_447_p2 = ((tmp_fu_433_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln37_1_fu_465_p2 = (icmp_ln37_3_reg_762 | icmp_ln37_2_reg_757);

assign or_ln37_fu_459_p2 = (icmp_ln37_fu_447_p2 | icmp_ln37_1_fu_453_p2);

assign preIndex_fu_379_p2 = (ap_sig_allocacmp_p_pn_load - zext_ln24_cast_fu_303_p1);

assign reuse_select18_fu_423_p3 = ((addr_cmp17_reg_778[0:0] == 1'b1) ? reuse_reg13_fu_106 : bboxes_info_score_load_reg_773);

assign reuse_select24_fu_587_p3 = ((addr_cmp23_reg_845[0:0] == 1'b1) ? reuse_reg19_fu_98 : bboxes_info_y2_q0);

assign reuse_select30_fu_567_p3 = ((addr_cmp29_reg_835[0:0] == 1'b1) ? reuse_reg25_fu_90 : bboxes_info_x2_q0);

assign reuse_select36_fu_547_p3 = ((addr_cmp35_reg_825[0:0] == 1'b1) ? reuse_reg31_fu_82 : bboxes_info_y1_q0);

assign reuse_select42_fu_527_p3 = ((addr_cmp41_reg_815[0:0] == 1'b1) ? reuse_reg37_fu_74 : bboxes_info_x1_q0);

assign reuse_select_fu_615_p3 = ((addr_cmp_reg_855[0:0] == 1'b1) ? reuse_reg_fu_114 : bboxes_info_index_q0);

assign tmp_fu_433_p4 = {{bitcast_ln37_fu_430_p1[30:23]}};

assign trunc_ln37_fu_443_p1 = bitcast_ln37_fu_430_p1[22:0];

assign trunc_ln46_fu_402_p1 = preIndex_fu_379_p2[6:0];

assign zext_ln24_cast_fu_303_p1 = zext_ln24;

assign zext_ln27_cast_fu_299_p1 = zext_ln27;

assign zext_ln36_cast_fu_307_p1 = zext_ln36;

assign zext_ln37_fu_385_p1 = preIndex_fu_379_p2;

assign zext_ln46_fu_481_p1 = add_ln46_reg_767;

assign zext_ln46_out = add_ln46_reg_767;

always @ (posedge ap_clk) begin
    zext_ln37_reg_737[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln46_reg_794[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //nms_nms_Pipeline_VITIS_LOOP_37_4
