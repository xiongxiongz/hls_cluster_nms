-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nms_nms_Pipeline_VITIS_LOOP_37_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln36 : IN STD_LOGIC_VECTOR (6 downto 0);
    zext_ln24 : IN STD_LOGIC_VECTOR (5 downto 0);
    bboxes_info_score_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_score_ce0 : OUT STD_LOGIC;
    bboxes_info_score_we0 : OUT STD_LOGIC;
    bboxes_info_score_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_score_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_score_ce1 : OUT STD_LOGIC;
    bboxes_info_score_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    empty : IN STD_LOGIC_VECTOR (22 downto 0);
    temp_score : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln27 : IN STD_LOGIC_VECTOR (5 downto 0);
    bboxes_info_index_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_index_ce0 : OUT STD_LOGIC;
    bboxes_info_index_we0 : OUT STD_LOGIC;
    bboxes_info_index_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_index_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_y2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_y2_ce0 : OUT STD_LOGIC;
    bboxes_info_y2_we0 : OUT STD_LOGIC;
    bboxes_info_y2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_y2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_x2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_x2_ce0 : OUT STD_LOGIC;
    bboxes_info_x2_we0 : OUT STD_LOGIC;
    bboxes_info_x2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_x2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_y1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_y1_ce0 : OUT STD_LOGIC;
    bboxes_info_y1_we0 : OUT STD_LOGIC;
    bboxes_info_y1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_y1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_x1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bboxes_info_x1_ce0 : OUT STD_LOGIC;
    bboxes_info_x1_we0 : OUT STD_LOGIC;
    bboxes_info_x1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bboxes_info_x1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln46_out : OUT STD_LOGIC_VECTOR (6 downto 0);
    zext_ln46_out_ap_vld : OUT STD_LOGIC;
    grp_fu_5858_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5858_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_5858_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_5858_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_5858_p_ce : OUT STD_LOGIC );
end;


architecture behav of nms_nms_Pipeline_VITIS_LOOP_37_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal and_ln37_1_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal preIndex_fu_379_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal preIndex_reg_732 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln37_fu_385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_reg_737 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln37_2_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_2_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_3_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_3_reg_762 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln46_fu_406_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_reg_767 : STD_LOGIC_VECTOR (6 downto 0);
    signal bboxes_info_score_load_reg_773 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal addr_cmp17_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp17_reg_778 : STD_LOGIC_VECTOR (0 downto 0);
    signal reuse_select18_fu_423_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reuse_select18_reg_783 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal zext_ln46_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_reg_794 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal addr_cmp41_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp41_reg_815 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp35_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp35_reg_825 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp29_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp29_reg_835 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp23_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp23_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp_reg_855 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal reuse_addr_reg38_fu_70 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_loop_init : STD_LOGIC;
    signal reuse_reg37_fu_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reuse_select42_fu_527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reuse_addr_reg32_fu_78 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal reuse_reg31_fu_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reuse_select36_fu_547_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reuse_addr_reg26_fu_86 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal reuse_reg25_fu_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reuse_select30_fu_567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reuse_addr_reg20_fu_94 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal reuse_reg19_fu_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reuse_select24_fu_587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reuse_addr_reg14_fu_102 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal reuse_reg13_fu_106 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal reuse_addr_reg_fu_110 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal reuse_reg_fu_114 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal reuse_select_fu_615_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_pn_fu_118 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal zext_ln36_cast_fu_307_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_p_pn_load : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal zext_ln24_cast_fu_303_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln46_fu_402_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_cast_fu_299_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln37_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_433_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln37_fu_443_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln37_1_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_1_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component nms_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component nms_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component nms_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    p_pn_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_pn_fu_118 <= zext_ln36_cast_fu_307_p1;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    p_pn_fu_118 <= preIndex_reg_732;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg14_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg14_fu_102 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_addr_reg14_fu_102 <= zext_ln46_reg_794;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg20_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg20_fu_94 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_addr_reg20_fu_94 <= zext_ln46_reg_794;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg26_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg26_fu_86 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_addr_reg26_fu_86 <= zext_ln46_reg_794;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg32_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg32_fu_78 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_addr_reg32_fu_78 <= zext_ln46_reg_794;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg38_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg38_fu_70 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_addr_reg38_fu_70 <= zext_ln46_reg_794;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg_fu_110 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_addr_reg_fu_110 <= zext_ln46_reg_794;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg13_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_reg13_fu_106 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_reg13_fu_106 <= reuse_select18_reg_783;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg19_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_reg19_fu_98 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_reg19_fu_98 <= reuse_select24_fu_587_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg25_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_reg25_fu_90 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_reg25_fu_90 <= reuse_select30_fu_567_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg31_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_reg31_fu_82 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_reg31_fu_82 <= reuse_select36_fu_547_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg37_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_reg37_fu_74 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_reg37_fu_74 <= reuse_select42_fu_527_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_reg_fu_114 <= ap_const_lv7_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    reuse_reg_fu_114 <= reuse_select_fu_615_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln46_reg_767 <= add_ln46_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                addr_cmp17_reg_778 <= addr_cmp17_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                addr_cmp23_reg_845 <= addr_cmp23_fu_511_p2;
                addr_cmp29_reg_835 <= addr_cmp29_fu_503_p2;
                addr_cmp35_reg_825 <= addr_cmp35_fu_495_p2;
                addr_cmp41_reg_815 <= addr_cmp41_fu_487_p2;
                addr_cmp_reg_855 <= addr_cmp_fu_519_p2;
                    zext_ln46_reg_794(6 downto 0) <= zext_ln46_fu_481_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                bboxes_info_score_load_reg_773 <= bboxes_info_score_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln37_2_reg_757 <= icmp_ln37_2_fu_390_p2;
                icmp_ln37_3_reg_762 <= icmp_ln37_3_fu_396_p2;
                preIndex_reg_732 <= preIndex_fu_379_p2;
                    zext_ln37_reg_737(15 downto 0) <= zext_ln37_fu_385_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                reuse_select18_reg_783 <= reuse_select18_fu_423_p3;
            end if;
        end if;
    end process;
    zext_ln37_reg_737(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln46_reg_794(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln46_fu_406_p2 <= std_logic_vector(unsigned(trunc_ln46_fu_402_p1) + unsigned(zext_ln27_cast_fu_299_p1));
    addr_cmp17_fu_415_p2 <= "1" when (reuse_addr_reg14_fu_102 = zext_ln37_reg_737) else "0";
    addr_cmp23_fu_511_p2 <= "1" when (reuse_addr_reg20_fu_94 = zext_ln37_reg_737) else "0";
    addr_cmp29_fu_503_p2 <= "1" when (reuse_addr_reg26_fu_86 = zext_ln37_reg_737) else "0";
    addr_cmp35_fu_495_p2 <= "1" when (reuse_addr_reg32_fu_78 = zext_ln37_reg_737) else "0";
    addr_cmp41_fu_487_p2 <= "1" when (reuse_addr_reg38_fu_70 = zext_ln37_reg_737) else "0";
    addr_cmp_fu_519_p2 <= "1" when (reuse_addr_reg_fu_110 = zext_ln37_reg_737) else "0";
    and_ln37_1_fu_475_p2 <= (or_ln37_fu_459_p2 and and_ln37_fu_469_p2);
    and_ln37_fu_469_p2 <= (or_ln37_1_fu_465_p2 and grp_fu_5858_p_dout0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, and_ln37_1_fu_475_p2)
    begin
        if (((ap_const_lv1_0 = and_ln37_1_fu_475_p2) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_p_pn_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, preIndex_reg_732, ap_block_pp0_stage0, ap_loop_init, p_pn_fu_118, zext_ln36_cast_fu_307_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                ap_sig_allocacmp_p_pn_load <= zext_ln36_cast_fu_307_p1;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                ap_sig_allocacmp_p_pn_load <= preIndex_reg_732;
            else 
                ap_sig_allocacmp_p_pn_load <= p_pn_fu_118;
            end if;
        else 
            ap_sig_allocacmp_p_pn_load <= p_pn_fu_118;
        end if; 
    end process;


    bboxes_info_index_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln37_reg_737, zext_ln46_reg_794, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_index_address0 <= zext_ln46_reg_794(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            bboxes_info_index_address0 <= zext_ln37_reg_737(7 - 1 downto 0);
        else 
            bboxes_info_index_address0 <= "XXXXXXX";
        end if; 
    end process;


    bboxes_info_index_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bboxes_info_index_ce0 <= ap_const_logic_1;
        else 
            bboxes_info_index_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_info_index_d0 <= 
        reuse_reg_fu_114 when (addr_cmp_reg_855(0) = '1') else 
        bboxes_info_index_q0;

    bboxes_info_index_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_index_we0 <= ap_const_logic_1;
        else 
            bboxes_info_index_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_info_score_address0 <= zext_ln46_reg_794(7 - 1 downto 0);
    bboxes_info_score_address1 <= zext_ln37_fu_385_p1(7 - 1 downto 0);

    bboxes_info_score_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_score_ce0 <= ap_const_logic_1;
        else 
            bboxes_info_score_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bboxes_info_score_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_score_ce1 <= ap_const_logic_1;
        else 
            bboxes_info_score_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_info_score_d0 <= reuse_select18_reg_783;

    bboxes_info_score_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_score_we0 <= ap_const_logic_1;
        else 
            bboxes_info_score_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bboxes_info_x1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln37_reg_737, zext_ln46_reg_794, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_x1_address0 <= zext_ln46_reg_794(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            bboxes_info_x1_address0 <= zext_ln37_reg_737(7 - 1 downto 0);
        else 
            bboxes_info_x1_address0 <= "XXXXXXX";
        end if; 
    end process;


    bboxes_info_x1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bboxes_info_x1_ce0 <= ap_const_logic_1;
        else 
            bboxes_info_x1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_info_x1_d0 <= 
        reuse_reg37_fu_74 when (addr_cmp41_reg_815(0) = '1') else 
        bboxes_info_x1_q0;

    bboxes_info_x1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_x1_we0 <= ap_const_logic_1;
        else 
            bboxes_info_x1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bboxes_info_x2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln37_reg_737, zext_ln46_reg_794, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_x2_address0 <= zext_ln46_reg_794(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            bboxes_info_x2_address0 <= zext_ln37_reg_737(7 - 1 downto 0);
        else 
            bboxes_info_x2_address0 <= "XXXXXXX";
        end if; 
    end process;


    bboxes_info_x2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bboxes_info_x2_ce0 <= ap_const_logic_1;
        else 
            bboxes_info_x2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_info_x2_d0 <= 
        reuse_reg25_fu_90 when (addr_cmp29_reg_835(0) = '1') else 
        bboxes_info_x2_q0;

    bboxes_info_x2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_x2_we0 <= ap_const_logic_1;
        else 
            bboxes_info_x2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bboxes_info_y1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln37_reg_737, zext_ln46_reg_794, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_y1_address0 <= zext_ln46_reg_794(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            bboxes_info_y1_address0 <= zext_ln37_reg_737(7 - 1 downto 0);
        else 
            bboxes_info_y1_address0 <= "XXXXXXX";
        end if; 
    end process;


    bboxes_info_y1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bboxes_info_y1_ce0 <= ap_const_logic_1;
        else 
            bboxes_info_y1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_info_y1_d0 <= 
        reuse_reg31_fu_82 when (addr_cmp35_reg_825(0) = '1') else 
        bboxes_info_y1_q0;

    bboxes_info_y1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_y1_we0 <= ap_const_logic_1;
        else 
            bboxes_info_y1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bboxes_info_y2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, zext_ln37_reg_737, zext_ln46_reg_794, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_y2_address0 <= zext_ln46_reg_794(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            bboxes_info_y2_address0 <= zext_ln37_reg_737(7 - 1 downto 0);
        else 
            bboxes_info_y2_address0 <= "XXXXXXX";
        end if; 
    end process;


    bboxes_info_y2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bboxes_info_y2_ce0 <= ap_const_logic_1;
        else 
            bboxes_info_y2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_info_y2_d0 <= 
        reuse_reg19_fu_98 when (addr_cmp23_reg_845(0) = '1') else 
        bboxes_info_y2_q0;

    bboxes_info_y2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bboxes_info_y2_we0 <= ap_const_logic_1;
        else 
            bboxes_info_y2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln37_fu_430_p1 <= reuse_select18_reg_783;
    grp_fu_5858_p_ce <= ap_const_logic_1;
    grp_fu_5858_p_din0 <= reuse_select18_fu_423_p3;
    grp_fu_5858_p_din1 <= temp_score;
    grp_fu_5858_p_opcode <= ap_const_lv5_4;
    icmp_ln37_1_fu_453_p2 <= "1" when (trunc_ln37_fu_443_p1 = ap_const_lv23_0) else "0";
    icmp_ln37_2_fu_390_p2 <= "0" when (tmp_1 = ap_const_lv8_FF) else "1";
    icmp_ln37_3_fu_396_p2 <= "1" when (empty = ap_const_lv23_0) else "0";
    icmp_ln37_fu_447_p2 <= "0" when (tmp_fu_433_p4 = ap_const_lv8_FF) else "1";
    or_ln37_1_fu_465_p2 <= (icmp_ln37_3_reg_762 or icmp_ln37_2_reg_757);
    or_ln37_fu_459_p2 <= (icmp_ln37_fu_447_p2 or icmp_ln37_1_fu_453_p2);
    preIndex_fu_379_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_p_pn_load) - unsigned(zext_ln24_cast_fu_303_p1));
    reuse_select18_fu_423_p3 <= 
        reuse_reg13_fu_106 when (addr_cmp17_reg_778(0) = '1') else 
        bboxes_info_score_load_reg_773;
    reuse_select24_fu_587_p3 <= 
        reuse_reg19_fu_98 when (addr_cmp23_reg_845(0) = '1') else 
        bboxes_info_y2_q0;
    reuse_select30_fu_567_p3 <= 
        reuse_reg25_fu_90 when (addr_cmp29_reg_835(0) = '1') else 
        bboxes_info_x2_q0;
    reuse_select36_fu_547_p3 <= 
        reuse_reg31_fu_82 when (addr_cmp35_reg_825(0) = '1') else 
        bboxes_info_y1_q0;
    reuse_select42_fu_527_p3 <= 
        reuse_reg37_fu_74 when (addr_cmp41_reg_815(0) = '1') else 
        bboxes_info_x1_q0;
    reuse_select_fu_615_p3 <= 
        reuse_reg_fu_114 when (addr_cmp_reg_855(0) = '1') else 
        bboxes_info_index_q0;
    tmp_fu_433_p4 <= bitcast_ln37_fu_430_p1(30 downto 23);
    trunc_ln37_fu_443_p1 <= bitcast_ln37_fu_430_p1(23 - 1 downto 0);
    trunc_ln46_fu_402_p1 <= preIndex_fu_379_p2(7 - 1 downto 0);
    zext_ln24_cast_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln24),16));
    zext_ln27_cast_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln27),7));
    zext_ln36_cast_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln36),16));
    zext_ln37_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(preIndex_fu_379_p2),64));
    zext_ln46_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_reg_767),64));
    zext_ln46_out <= add_ln46_reg_767;

    zext_ln46_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage3, and_ln37_1_fu_475_p2, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_lv1_0 = and_ln37_1_fu_475_p2) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            zext_ln46_out_ap_vld <= ap_const_logic_1;
        else 
            zext_ln46_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
